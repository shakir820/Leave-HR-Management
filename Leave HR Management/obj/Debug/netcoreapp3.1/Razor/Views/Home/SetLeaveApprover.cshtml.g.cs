#pragma checksum "E:\Github\Leave-HR-Management\Leave HR Management\Views\Home\SetLeaveApprover.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "54336f66932c421f12faf14d7656567e2178f1da"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_SetLeaveApprover), @"mvc.1.0.view", @"/Views/Home/SetLeaveApprover.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Github\Leave-HR-Management\Leave HR Management\Views\_ViewImports.cshtml"
using Leave_HR_Management;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Github\Leave-HR-Management\Leave HR Management\Views\_ViewImports.cshtml"
using Leave_HR_Management.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\Github\Leave-HR-Management\Leave HR Management\Views\_ViewImports.cshtml"
using Leave_HR_Management.ViewModels;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"54336f66932c421f12faf14d7656567e2178f1da", @"/Views/Home/SetLeaveApprover.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d86489a5bf41ecb98a591924675c3718600be1b7", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_SetLeaveApprover : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<EmployeeVM>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "hidden", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("EmployeeId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "-1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "E:\Github\Leave-HR-Management\Leave HR Management\Views\Home\SetLeaveApprover.cshtml"
  
    ViewData["Title"] = "SetLeaveApprover";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div><h4>Set Leave Approver for</h4> <h3><b>");
#nullable restore
#line 7 "E:\Github\Leave-HR-Management\Leave HR Management\Views\Home\SetLeaveApprover.cshtml"
                                       Write(Model.FullName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</b> </h3></div>\r\n<hr />\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "54336f66932c421f12faf14d7656567e2178f1da6778", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "54336f66932c421f12faf14d7656567e2178f1da7040", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
#nullable restore
#line 12 "E:\Github\Leave-HR-Management\Leave HR Management\Views\Home\SetLeaveApprover.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.Id);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <div class=""form-group row"">
        <label for=""LevelSelectDropDown"" class=""font-weight-bold col-sm-2 col-form-label"">Select Level</label>
        <div class=""col-sm-10"">
            <select id=""LevelSelectDropDown"" class=""form-control"" onchange=""LevelChanged()"">
                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "54336f66932c421f12faf14d7656567e2178f1da9131", async() => {
                    WriteLiteral("Select");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "54336f66932c421f12faf14d7656567e2178f1da10693", async() => {
                    WriteLiteral("Company");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "54336f66932c421f12faf14d7656567e2178f1da11934", async() => {
                    WriteLiteral("Department");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "54336f66932c421f12faf14d7656567e2178f1da13178", async() => {
                    WriteLiteral("Employee");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
            </select>
        </div>
    </div>

    <div class=""form-group row"" id=""SecondDropdownGroup"">
        <label for=""LevelSelectDropDown"" class=""font-weight-bold col-sm-2 col-form-label"">Department/ Employee</label>
        <div class=""col-sm-10"">
            <select id=""EmployeeAndDepartmentSelectDropDown"" class=""form-control"" onchange=""DepartmentChanged()"">
                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "54336f66932c421f12faf14d7656567e2178f1da14815", async() => {
                    WriteLiteral("Select Department");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            </select>\r\n        </div>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"



<div class=""table-responsive"">
    <table class=""table table-bordered"" id=""dataTable"" width=""100%"" cellspacing=""0"">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Gender</th>
                <th>Level</th>
                <th>Departments</th>
                <th>Set Approver</th>
            </tr>
        </thead>
        <tbody id=""EmployeeTableBody"">
");
            WriteLiteral(@"        </tbody>
    </table>
</div>

<div style=""margin-bottom:100px;"">
    <button class=""btn btn-primary btn-icon-split btn-sm float-right"" style=""width:80px;"" onclick=""SaveBtnClicked()"">Save</button>
</div>




<script type=""text/javascript"">



");
            WriteLiteral(@"
    $(document).ready(function () {
        $(""#SecondDropdownGroup"").hide();
          

    })




    function LevelChanged() {
       

        var selectedLevel = $(""#LevelSelectDropDown"").val();
        if (selectedLevel == 0 || selectedLevel == -1 || selectedLevel == 2) {
            $(""#SecondDropdownGroup"").hide();
        }
        else {
            $(""#SecondDropdownGroup"").show();
        }

        $('#EmployeeAndDepartmentSelectDropDown').empty();

        if (selectedLevel == 1) {
            $('#EmployeeAndDepartmentSelectDropDown').append('<option selected value=""0"">--- Select ---</option>');
            $('#EmployeeAndDepartmentSelectDropDown').append('<option value=""1"">HR</option>');
            $('#EmployeeAndDepartmentSelectDropDown').append('<option value=""2"">IT</option>');
            $('#EmployeeAndDepartmentSelectDropDown').append('<option value=""3"">Creative</option>');
            $('#EmployeeAndDepartmentSelectDropDown').append('<option value=""4"">Market");
            WriteLiteral(@"ing</option>');
            $('#EmployeeAndDepartmentSelectDropDown').append('<option value=""5"">Sales</option>');
        }

        $(""#EmployeeTableBody"").empty();

        if (selectedLevel == 0) {
            //$(""#EmployeeTableBody"").empty();
            PopulateCompanyEmployees();
        }

        if (selectedLevel == 2) {
            //$(""#EmployeeTableBody"").empty();
            PopulateEmployees();
        }

    }






    function PopulateEmployees() {
          $.ajax({
                url: """);
#nullable restore
#line 137 "E:\Github\Leave-HR-Management\Leave HR Management\Views\Home\SetLeaveApprover.cshtml"
                 Write(Url.Action("GetEmployeesByEmployee", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                success: function (result) {
                  
                    var employeeId = $(""#EmployeeId"").val();
                    //var leaveApprovers = GetEmployeeLeaveApprovers(employeeId);
                    $.each(result, function (index, employee) {
                       
                        var employeeName = employee.firstName + "" "" + employee.lastName;
                        var gender = """";
                        if (employee.gender == 0) {
                            gender = ""Male"";
                        }
                        else {
                            gender = ""Female"";
                        }

                        var deparmentsStr = """";
                        $.each(employee.departments, function (i, dep) {
                            var name = GetDepartmentName(dep.catagory);
                            if (i != 0) {
                                deparmentsStr += "", "";
                            }
                        ");
            WriteLiteral(@"    deparmentsStr += name;
                        });



                        if (employee.isApprover == true) {
                            
                            $(""#EmployeeTableBody"").append(
                                `<tr>
                                <td>${employee.id}</td>
                                <td>${employeeName}</td>
                                <td>${gender}</td>
                                <td>Employee</td>
                                <td>${deparmentsStr}</td>
                                <td>
                                    <div>
                                        <input class=""d-inline"" type=""checkbox"" checked/>
                                        <div class=""d-inline"">Set Approver</div>
                                    </div>
                                </td>
                            </tr>`);
                        }
                        else {
                            $(""#EmployeeTableBody"").append(");
            WriteLiteral(@"
                            `<tr>
                                <td>${employee.id}</td>
                                <td>${employeeName}</td>
                                <td>${gender}</td>
                                <td>Employee</td>
                                <td>${deparmentsStr}</td>
                                <td>
                                    <div>
                                        <input class=""d-inline"" type=""checkbox"" />
                                        <div class=""d-inline"">Set Approver</div>
                                    </div>
                                </td>
                            </tr>`);
                        }

                        });
                },
              dataType: ""json""
            });
    }





    function PopulateCompanyEmployees() {
          $.ajax({
                url: """);
#nullable restore
#line 211 "E:\Github\Leave-HR-Management\Leave HR Management\Views\Home\SetLeaveApprover.cshtml"
                 Write(Url.Action("GetEmployeesByCompany", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",

                success: function (result) {
                    
                    $.each(result, function (index, employee) {
                      
                        var employeeName = employee.firstName + "" "" + employee.lastName;
                        var gender = """";
                        if (employee.gender == 0) {
                            gender = ""Male"";
                        }
                        else {
                            gender = ""Female"";
                        }

                        var deparmentsStr = """";
                        $.each(employee.departments, function (i, dep) {
                            var name = GetDepartmentName(dep.catagory);
                            if (i != 0) {
                                deparmentsStr += "", "";
                            }
                            deparmentsStr += name;
                        });

                        if (employee.isApprover == true) {
                         ");
            WriteLiteral(@"   $(""#EmployeeTableBody"").append(
                                `<tr>
                                <td>${employee.id}</td>
                                <td>${employeeName}</td>
                                <td>${gender}</td>
                                <td>Company</td>
                                <td>${deparmentsStr}</td>
                                <td>
                                    <div>
                                        <input class=""d-inline"" type=""checkbox"" checked/>
                                        <div class=""d-inline"">Set Approver</div>
                                    </div>
                                </td>
                            </tr>`);
                        }
                        else {
                            $(""#EmployeeTableBody"").append(
                            `<tr>
                                <td>${employee.id}</td>
                                <td>${employeeName}</td>
                            ");
            WriteLiteral(@"    <td>${gender}</td>
                                <td>Company</td>
                                <td>${deparmentsStr}</td>
                                <td>
                                    <div>
                                        <input class=""d-inline"" type=""checkbox"" />
                                        <div class=""d-inline"">Set Approver</div>
                                    </div>
                                </td>
                            </tr>`);
                        }

                        });
                },
              dataType: ""json""
            });
    }




    function DepartmentChanged() {
        var selectedLevel = $(""#EmployeeAndDepartmentSelectDropDown"").val();
         $(""#EmployeeTableBody"").empty();
        if (selectedLevel != 0) {
               $.ajax({
                   url: """);
#nullable restore
#line 282 "E:\Github\Leave-HR-Management\Leave HR Management\Views\Home\SetLeaveApprover.cshtml"
                    Write(Url.Action("GetEmployeesByDepartment", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                   data: { id: selectedLevel },
                success: function (result) {
                   
                    $.each(result, function (index, employee) {
                      
                        var employeeName = employee.firstName + "" "" + employee.lastName;
                        var gender = """";
                        if (employee.gender == 0) {
                            gender = ""Male"";
                        }
                        else {
                            gender = ""Female"";
                        }

                        var deparmentsStr = """";
                        $.each(employee.departments, function (i, dep) {
                            var name = GetDepartmentName(dep.catagory);
                            if (i != 0) {
                                deparmentsStr += "", "";
                            }
                            deparmentsStr += name;
                        });

                        if (employee.is");
            WriteLiteral(@"Approver == true) {
                            $(""#EmployeeTableBody"").append(
                                `<tr>
                                 <td>${employee.id}</td>
                                <td>${employeeName}</td>
                                <td>${gender}</td>
                                <td>Department</td>
                                <td>${deparmentsStr}</td>
                                <td>
                                    <div>
                                        <input class=""d-inline"" type=""checkbox"" checked/>
                                        <div class=""d-inline"">Set Approver</div>
                                    </div>
                                </td>
                            </tr>`);
                        }
                        else {
                            $(""#EmployeeTableBody"").append(
                            `<tr>
                                <td>${employee.id}</td>
                                <td>");
            WriteLiteral(@"${employeeName}</td>
                                <td>${gender}</td>
                                <td>Department</td>
                                <td>${deparmentsStr}</td>
                                <td>
                                    <div>
                                        <input class=""d-inline"" type=""checkbox"" />
                                        <div class=""d-inline"">Set Approver</div>
                                    </div>
                                </td>
                            </tr>`);
                        }

                        });
                },
              dataType: ""json""
            });
        }

    }




    function GetEmployeeLeaveApprovers(Id) {
         $.ajax({
                url: """);
#nullable restore
#line 352 "E:\Github\Leave-HR-Management\Leave HR Management\Views\Home\SetLeaveApprover.cshtml"
                 Write(Url.Action("GetLeaveApproversByEmployee", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                success: function (result) {
                   
                    return result;
             },
             error: function () { return null; },
              dataType: ""json""
            });
    }










    function SaveBtnClicked() {
        var employeeId = $(""#EmployeeId"").val();
        var formData = new FormData();
        formData.append(""EmployeeId"", employeeId);

        var rowLength = $(""#EmployeeTableBody"").children().length;
        
        if (rowLength > 0) {

            var leaveApprovers = [];

            var trChildren = $(""#EmployeeTableBody"").children();
            $.each(trChildren, function (index, trItem) {
                var tdCollection = $(trItem).children();

                var LeaveApprover = {
                    ""Id"": 0,
                    ""Name"": ""nsam"",
                    ""EmployeeId"": 0,
                    ""Department"": -1,
                    ""EmployeeRole"": 0,
                    ""IsChecked"": false");
            WriteLiteral(@"
                };

                if ($(""#EmployeeAndDepartmentSelectDropDown"").children().length != 0) {
                    var selectedDepartment = $(""#EmployeeAndDepartmentSelectDropDown"").val();
                    LeaveApprover[""Department""] = selectedDepartment;
                    
                }

                if ($(""#LevelSelectDropDown"").val() != -1) {
                    LeaveApprover[""EmployeeRole""] = $(""#LevelSelectDropDown"").val();
                }


                $.each(tdCollection, function (tdCollectionIndex, tdItem) {
                    if (tdCollectionIndex == 0) {
                        var _employeeId = $(tdItem).text();
                        LeaveApprover[""EmployeeId""] = _employeeId;
                    }
                    if (tdCollectionIndex == 1) {
                        LeaveApprover[""Name""] = $(tdItem).text();
                    }

                    if (tdCollectionIndex == 5) {
                        var rr = $(tdItem).children();
 ");
            WriteLiteral(@"                       var checkElments = $(rr[0]).children();
                        var checkElement = checkElments[0];
                        if ($(checkElement).prop(""checked"") == true) {
                            LeaveApprover[""IsChecked""] = true;
                        } else {
                            LeaveApprover[""IsChecked""] = false;
                        }
                    }

                    //if (tdCollectionIndex == 2) {
                    //    LeaveApprover[""Gender""] = $(tdItem).text();
                    //}

                });

                leaveApprovers.push(LeaveApprover);
                
            });

            //var jsonLeaveApprovers = JSON.stringify(leaveApprovers);

            var ss = {
                EmployeeId: employeeId,
                LeaveApprovers: leaveApprovers
            };

            var rr1 = JSON.stringify(ss);

            //formData.append(""LeaveApprovers"", jsonLeaveApprovers);
            //var jsonData =");
            WriteLiteral(" JSON.stringify(formData);\r\n\r\n            HitServer(ss);\r\n           \r\n        }\r\n         \r\n    }\r\n\r\n\r\n    function HitServer(dataF) {\r\n        console.log(dataF);\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: \"");
#nullable restore
#line 459 "E:\Github\Leave-HR-Management\Leave HR Management\Views\Home\SetLeaveApprover.cshtml"
             Write(Url.Action("SetLeaveApprover", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
            data: dataF,
            processData: true
            //dataType: ""json"",
            //contentType: ""application/json""
            });
    }


    //javaScript Class




    class LeaveApprover {
        Name;
        EmployeeId;
        Department;
        EmployeeRole;
    }

    



</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<EmployeeVM> Html { get; private set; }
    }
}
#pragma warning restore 1591
